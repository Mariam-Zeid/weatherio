/* ? ========================= ANIMATION ========================= */
/* expanding from the center in a circular manner until it reaches its full visibility. */
@keyframes ripple {
  0% {
    clip-path: circle(0% at 50% 50%);
  }
  100% {
    clip-path: circle(100% at 50% 50%);
  }
}

/* Spinner for loading */
@keyframes loading {
  0% {
    transform: translateY(-50%) rotate(0);
  }
  100% {
    transform: translateY(-50%) rotate(1turn);
  }
}

/* ? ========================= BUTTONS ========================= */
.icon-btn {
  background-color: var(--white-alpha-8);
  width: 4.8rem;
  height: 4.8rem;
  display: grid;
  place-items: center;
  border-radius: var(--radius-circle);
}

.has-state {
  position: relative;
}
.has-state:is(:focus, :focus-visible) {
  box-shadow: none;
}
.has-state:hover {
  box-shadow: var(--shadow-1);
}
.has-state::before {
  content: "";
  position: absolute;

  /* The 'inset' property is a shorthand for 
  'top', 'right', 'bottom', and 'left'
  Here, it's set to '0', ensuring the pseudo-element covers the entire area of its parent. */
  inset: 0;
  border-radius: inherit;

  /* creating a circular clipping path that covers the entire pseudo-element */
  clip-path: circle(100% at 50% 50%);
  transition: var(--transition-short);
}
.has-state:hover::before {
  background-color: var(--white-alpha-4);
}
.has-state:is(:focus, :focus-visible)::before {
  background-color: var(--white-alpha-8);
  animation: ripple 250ms ease forwards;
}

.btn-primary {
  background-color: var(--primary);
  color: var(--on-primary);
  height: 48px;
  line-height: 3;
  max-width: max-content;
  display: flex;
  align-items: center;
  gap: 1.6rem;
  padding-inline: 1.6rem;
  border-radius: var(--radius-pill);
}

.btn-primary .span {
  font-weight: var(--weight-semiBold);
}

.btn-primary[disabled] {
  background-color: var(--outline);
  color: var(--on-surface-variant);
  cursor: not-allowed;
}

.btn-primary[disabled]::before {
  display: none;
}

/* ? ========================= LAYOUT ========================= */
main {
  height: calc(100vh - 80px);
  height: calc(100svh - 80px); /* for mobile browser */
  overflow: hidden;
}

.container {
  max-width: 1600px;
  width: 100%;
  margin-inline: auto;
  padding: 2.5rem;
}

.section:not(:last-child) {
  margin-block-end: 1.6rem;
}

/* ? ========================= CARDS ========================= */
.card {
  background-color: var(--surface);
  color: var(--on-surface);
}
.card-lg {
  border-radius: var(--radius-28);
  padding: 2rem;
}
.card-sm {
  border-radius: var(--radius-16);
  padding: 1.6rem;
}

/* ? ========================= TYPOGRAPHY ========================= */
.heading {
  color: var(--white);
  font-size: var(--heading);
  line-height: 1.1;
}
.title-1 {
  font-size: var(--title-1);
}
.title-2 {
  font-size: var(--title-2);
  margin-block-end: 1.2rem;
}
.title-3 {
  font-size: var(--title-3);
  font-weight: var(--weight-semiBold);
}
.body-1 {
  font-size: var(--body-1);
}
.body-2 {
  font-size: var(--body-2);
  font-weight: var(--weight-semiBold);
}
.body-3 {
  font-size: var(--body-3);
}
.label-1 {
  font-size: var(--label-1);
}
.label-2 {
  font-size: var(--label-2);
}
